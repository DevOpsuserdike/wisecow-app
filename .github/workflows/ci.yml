name: GitHub Actions
run-name: ${{ github.actor }} is creating CICD Pipeline
on: [push]
jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: siddheshdike/cowsay:latest
  cd:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
#      - name: Install awscli
#        run: | 
#          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
#          unzip awscliv2.zip
#          sudo ./aws/install
#          ./aws/install -i /usr/local/aws-cli -b /usr/local/bin
#          aws --version
      
      - name: install kubectl
        run: |
          curl -LO https://dl.k8s.io/release/v1.31.0/bin/linux/amd64/kubectl
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
          echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          chmod +x kubectl
          mkdir -p ~/.local/bin
          mv ./kubectl ~/.local/bin/kubectl
          kubectl version --client

      - name: configure aws cli
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          aws-access-key-id: ${{ secrets.AWS_USERNAME }}
          aws-secret-access-key: ${{ secrets.AWS_SECRETKEY }}
        
      - name: configure aws cluster
        run: aws eks update-kubeconfig --region us-west-2 --name kub_cluster

      - name : list nodes
        run: kubectl get nodes
      
      - name: deployment of services
        run: |
          pwd
          ls -la


      



